   1                     ; C Compiler for STM8 (COSMIC Software)
   2                     ; Parser V4.11.14 - 18 Nov 2019
   3                     ; Generator (Limited) V4.4.11 - 19 Nov 2019
   4                     ; Optimizer V4.4.11 - 19 Nov 2019
  18                     .const:	section	.text
  19  9f11               L11_broadcast_ethaddr:
  20  9f11 ff            	dc.b	255
  21  9f12 ff            	dc.b	255
  22  9f13 ff            	dc.b	255
  23  9f14 ff            	dc.b	255
  24  9f15 ff            	dc.b	255
  25  9f16 ff            	dc.b	255
  26  9f17               L31_broadcast_ipaddr:
  27  9f17 ffff          	dc.w	-1
  28  9f19 ffff          	dc.w	-1
  60                     ; 144 uip_arp_init(void)
  60                     ; 145 {
  62                     .text:	section	.text,new
  63  f24a               _uip_arp_init:
  67                     ; 148   for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
  69  f24a 4f            	clr	a
  70  f24b c70570        	ld	L12_i,a
  71  f24e               L74:
  72                     ; 149     memset(arp_table[i].ipaddr, 0, 4);
  74  f24e 97            	ld	xl,a
  75  f24f a60b          	ld	a,#11
  76  f251 42            	mul	x,a
  77  f252 1c0575        	addw	x,#L51_arp_table
  78  f255 bf04          	ldw	c_x,x
  79  f257 ae0004        	ldw	x,#4
  80  f25a               L6:
  81  f25a 5a            	decw	x
  82  f25b 926f04        	clr	([c_x.w],x)
  83  f25e 5d            	tnzw	x
  84  f25f 26f9          	jrne	L6
  85                     ; 148   for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
  87  f261 725c0570      	inc	L12_i
  90  f265 c60570        	ld	a,L12_i
  91  f268 a104          	cp	a,#4
  92  f26a 25e2          	jrult	L74
  93                     ; 151 }
  96  f26c 81            	ret	
 188                     ; 166 uip_arp_timer(void)
 188                     ; 167 {
 189                     .text:	section	.text,new
 190  f26d               _uip_arp_timer:
 192  f26d 89            	pushw	x
 193       00000002      OFST:	set	2
 196                     ; 170   ++arptime;
 198  f26e 725c056e      	inc	L52_arptime
 199                     ; 171   for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
 201  f272 4f            	clr	a
 202  f273 c70570        	ld	L12_i,a
 203  f276               L321:
 204                     ; 172     tabptr = &arp_table[i];
 206  f276 97            	ld	xl,a
 207  f277 a60b          	ld	a,#11
 208  f279 42            	mul	x,a
 209  f27a 1c0575        	addw	x,#L51_arp_table
 210  f27d 1f01          	ldw	(OFST-1,sp),x
 212                     ; 173     if((tabptr->ipaddr[0] | tabptr->ipaddr[1]) != 0 &&
 212                     ; 174        arptime - tabptr->time >= UIP_ARP_MAXAGE) {
 214  f27f 1601          	ldw	y,(OFST-1,sp)
 215  f281 ee02          	ldw	x,(2,x)
 216  f283 01            	rrwa	x,a
 217  f284 90ea01        	or	a,(1,y)
 218  f287 01            	rrwa	x,a
 219  f288 90fa          	or	a,(y)
 220  f28a 01            	rrwa	x,a
 221  f28b 5d            	tnzw	x
 222  f28c 271e          	jreq	L131
 224  f28e c6056e        	ld	a,L52_arptime
 225  f291 5f            	clrw	x
 226  f292 90e00a        	sub	a,(10,y)
 227  f295 2401          	jrnc	L21
 228  f297 5a            	decw	x
 229  f298               L21:
 230  f298 02            	rlwa	x,a
 231  f299 a30078        	cpw	x,#120
 232  f29c 2f0e          	jrslt	L131
 233                     ; 175       memset(tabptr->ipaddr, 0, 4);
 235  f29e 1e01          	ldw	x,(OFST-1,sp)
 236  f2a0 bf04          	ldw	c_x,x
 237  f2a2 ae0004        	ldw	x,#4
 238  f2a5               L41:
 239  f2a5 5a            	decw	x
 240  f2a6 926f04        	clr	([c_x.w],x)
 241  f2a9 5d            	tnzw	x
 242  f2aa 26f9          	jrne	L41
 243  f2ac               L131:
 244                     ; 171   for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
 246  f2ac 725c0570      	inc	L12_i
 249  f2b0 c60570        	ld	a,L12_i
 250  f2b3 a104          	cp	a,#4
 251  f2b5 25bf          	jrult	L321
 252                     ; 178 }
 255  f2b7 85            	popw	x
 256  f2b8 81            	ret	
 321                     ; 183 uip_arp_update(uint16_t *ipaddr, struct uip_eth_addr *ethaddr)
 321                     ; 184 {
 322                     .text:	section	.text,new
 323  f2b9               L331_uip_arp_update:
 325  f2b9 89            	pushw	x
 326  f2ba 5204          	subw	sp,#4
 327       00000004      OFST:	set	4
 330                     ; 189   for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
 332  f2bc 4f            	clr	a
 333  f2bd c70570        	ld	L12_i,a
 334  f2c0               L761:
 335                     ; 191     tabptr = &arp_table[i];
 337  f2c0 97            	ld	xl,a
 338  f2c1 a60b          	ld	a,#11
 339  f2c3 42            	mul	x,a
 340  f2c4 1c0575        	addw	x,#L51_arp_table
 341  f2c7 1f03          	ldw	(OFST-1,sp),x
 343                     ; 193     if(tabptr->ipaddr[0] != 0 &&
 343                     ; 194        tabptr->ipaddr[1] != 0) {
 345  f2c9 e601          	ld	a,(1,x)
 346  f2cb fa            	or	a,(x)
 347  f2cc 2733          	jreq	L571
 349  f2ce e603          	ld	a,(3,x)
 350  f2d0 ea02          	or	a,(2,x)
 351  f2d2 272d          	jreq	L571
 352                     ; 198       if(ipaddr[0] == tabptr->ipaddr[0] &&
 352                     ; 199 	 ipaddr[1] == tabptr->ipaddr[1]) {
 354  f2d4 1e05          	ldw	x,(OFST+1,sp)
 355  f2d6 1603          	ldw	y,(OFST-1,sp)
 356  f2d8 fe            	ldw	x,(x)
 357  f2d9 90f3          	cpw	x,(y)
 358  f2db 2624          	jrne	L571
 360  f2dd 1e05          	ldw	x,(OFST+1,sp)
 361  f2df ee02          	ldw	x,(2,x)
 362  f2e1 90e302        	cpw	x,(2,y)
 363  f2e4 261b          	jrne	L571
 364                     ; 202 	memcpy(tabptr->ethaddr.addr, ethaddr->addr, 6);
 366  f2e6 93            	ldw	x,y
 367  f2e7 1c0004        	addw	x,#4
 368  f2ea bf04          	ldw	c_x,x
 369  f2ec 1609          	ldw	y,(OFST+5,sp)
 370  f2ee 90bf07        	ldw	c_y,y
 371  f2f1 ae0006        	ldw	x,#6
 372  f2f4               L02:
 373  f2f4 5a            	decw	x
 374  f2f5 92d607        	ld	a,([c_y.w],x)
 375  f2f8 92d704        	ld	([c_x.w],x),a
 376  f2fb 5d            	tnzw	x
 377  f2fc 26f6          	jrne	L02
 378                     ; 203 	tabptr->time = arptime;
 379                     ; 205 	return;
 381  f2fe ccf3ba        	jra	L03
 382  f301               L571:
 383                     ; 189   for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
 385  f301 725c0570      	inc	L12_i
 388  f305 c60570        	ld	a,L12_i
 389  f308 a104          	cp	a,#4
 390  f30a 25b4          	jrult	L761
 391                     ; 214   for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
 393  f30c 4f            	clr	a
 394  f30d c70570        	ld	L12_i,a
 395  f310               L102:
 396                     ; 215     tabptr = &arp_table[i];
 398  f310 97            	ld	xl,a
 399  f311 a60b          	ld	a,#11
 400  f313 42            	mul	x,a
 401  f314 1c0575        	addw	x,#L51_arp_table
 402  f317 1f03          	ldw	(OFST-1,sp),x
 404                     ; 216     if(tabptr->ipaddr[0] == 0 &&
 404                     ; 217        tabptr->ipaddr[1] == 0) {
 406  f319 e601          	ld	a,(1,x)
 407  f31b fa            	or	a,(x)
 408  f31c 2606          	jrne	L702
 410  f31e e603          	ld	a,(3,x)
 411  f320 ea02          	or	a,(2,x)
 412  f322 270b          	jreq	L502
 413                     ; 218       break;
 415  f324               L702:
 416                     ; 214   for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
 418  f324 725c0570      	inc	L12_i
 421  f328 c60570        	ld	a,L12_i
 422  f32b a104          	cp	a,#4
 423  f32d 25e1          	jrult	L102
 424  f32f               L502:
 425                     ; 224   if(i == UIP_ARPTAB_SIZE) {
 427  f32f c60570        	ld	a,L12_i
 428  f332 a104          	cp	a,#4
 429  f334 2657          	jrne	L112
 430                     ; 225     tmpage = 0;
 432  f336 725f056d      	clr	L72_tmpage
 433                     ; 226     c = 0;
 435  f33a 725f056f      	clr	L32_c
 436                     ; 227     for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
 438  f33e 4f            	clr	a
 439  f33f c70570        	ld	L12_i,a
 440  f342               L312:
 441                     ; 228       tabptr = &arp_table[i];
 443  f342 97            	ld	xl,a
 444  f343 a60b          	ld	a,#11
 445  f345 42            	mul	x,a
 446  f346 1c0575        	addw	x,#L51_arp_table
 447  f349 1f03          	ldw	(OFST-1,sp),x
 449                     ; 229       if(arptime - tabptr->time > tmpage) {
 451  f34b 5f            	clrw	x
 452  f34c c6056d        	ld	a,L72_tmpage
 453  f34f 97            	ld	xl,a
 454  f350 1f01          	ldw	(OFST-3,sp),x
 456  f352 5f            	clrw	x
 457  f353 1603          	ldw	y,(OFST-1,sp)
 458  f355 c6056e        	ld	a,L52_arptime
 459  f358 90e00a        	sub	a,(10,y)
 460  f35b 2401          	jrnc	L22
 461  f35d 5a            	decw	x
 462  f35e               L22:
 463  f35e 02            	rlwa	x,a
 464  f35f 1301          	cpw	x,(OFST-3,sp)
 465  f361 2d10          	jrsle	L122
 466                     ; 230 	tmpage = (uint8_t)(arptime - tabptr->time);
 468  f363 1e03          	ldw	x,(OFST-1,sp)
 469  f365 e60a          	ld	a,(10,x)
 470  f367 c0056e        	sub	a,L52_arptime
 471  f36a 40            	neg	a
 472  f36b c7056d        	ld	L72_tmpage,a
 473                     ; 231 	c = i;
 475  f36e 550570056f    	mov	L32_c,L12_i
 476  f373               L122:
 477                     ; 227     for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
 479  f373 725c0570      	inc	L12_i
 482  f377 c60570        	ld	a,L12_i
 483  f37a a104          	cp	a,#4
 484  f37c 25c4          	jrult	L312
 485                     ; 234     i = c;
 487  f37e c6056f        	ld	a,L32_c
 488  f381 c70570        	ld	L12_i,a
 489                     ; 235     tabptr = &arp_table[i];
 491  f384 97            	ld	xl,a
 492  f385 a60b          	ld	a,#11
 493  f387 42            	mul	x,a
 494  f388 1c0575        	addw	x,#L51_arp_table
 495  f38b 1f03          	ldw	(OFST-1,sp),x
 497  f38d               L112:
 498                     ; 240   memcpy(tabptr->ipaddr, ipaddr, 4);
 500  f38d bf04          	ldw	c_x,x
 501  f38f 1605          	ldw	y,(OFST+1,sp)
 502  f391 90bf07        	ldw	c_y,y
 503  f394 ae0004        	ldw	x,#4
 504  f397               L42:
 505  f397 5a            	decw	x
 506  f398 92d607        	ld	a,([c_y.w],x)
 507  f39b 92d704        	ld	([c_x.w],x),a
 508  f39e 5d            	tnzw	x
 509  f39f 26f6          	jrne	L42
 510                     ; 241   memcpy(tabptr->ethaddr.addr, ethaddr->addr, 6);
 512  f3a1 1e03          	ldw	x,(OFST-1,sp)
 513  f3a3 1c0004        	addw	x,#4
 514  f3a6 bf04          	ldw	c_x,x
 515  f3a8 1609          	ldw	y,(OFST+5,sp)
 516  f3aa 90bf07        	ldw	c_y,y
 517  f3ad ae0006        	ldw	x,#6
 518  f3b0               L62:
 519  f3b0 5a            	decw	x
 520  f3b1 92d607        	ld	a,([c_y.w],x)
 521  f3b4 92d704        	ld	([c_x.w],x),a
 522  f3b7 5d            	tnzw	x
 523  f3b8 26f6          	jrne	L62
 524                     ; 242   tabptr->time = arptime;
 526                     ; 243 }
 527  f3ba               L03:
 529  f3ba 1e03          	ldw	x,(OFST-1,sp)
 530  f3bc c6056e        	ld	a,L52_arptime
 531  f3bf e70a          	ld	(10,x),a
 534  f3c1 5b06          	addw	sp,#6
 535  f3c3 81            	ret	
 564                     ; 270 uip_arp_arpin(void)
 564                     ; 271 {
 565                     .text:	section	.text,new
 566  f3c4               _uip_arp_arpin:
 570                     ; 272   if(uip_len < sizeof(struct arp_hdr)) {
 572  f3c4 ce0373        	ldw	x,_uip_len
 573  f3c7 a3002a        	cpw	x,#42
 574  f3ca 5f            	clrw	x
 575  f3cb 2404          	jruge	L732
 576                     ; 273     uip_len = 0;
 578  f3cd cf0373        	ldw	_uip_len,x
 579                     ; 274     return;
 582  f3d0 81            	ret	
 583  f3d1               L732:
 584                     ; 276   uip_len = 0;
 586  f3d1 cf0373        	ldw	_uip_len,x
 587                     ; 278   switch(BUF->opcode) {
 589  f3d4 ce038b        	ldw	x,_uip_buf+20
 591                     ; 310     break;
 592  f3d7 5a            	decw	x
 593  f3d8 2704          	jreq	L322
 594  f3da 5a            	decw	x
 595  f3db 277a          	jreq	L522
 597  f3dd 81            	ret	
 598  f3de               L322:
 599                     ; 279   case HTONS(ARP_REQUEST):
 599                     ; 280     /* ARP request. If it asked for our address, we send out a reply. */
 599                     ; 281     if(uip_ipaddr_cmp(BUF->dipaddr, uip_hostaddr)) {
 601  f3de ce039d        	ldw	x,_uip_buf+38
 602  f3e1 c302c4        	cpw	x,_uip_hostaddr
 603  f3e4 2703ccf472    	jrne	L342
 605  f3e9 ce039f        	ldw	x,_uip_buf+40
 606  f3ec c302c6        	cpw	x,_uip_hostaddr+2
 607  f3ef 26f5          	jrne	L342
 608                     ; 285       uip_arp_update(BUF->sipaddr, &BUF->shwaddr);
 610  f3f1 ae038d        	ldw	x,#_uip_buf+22
 611  f3f4 89            	pushw	x
 612  f3f5 ae0393        	ldw	x,#_uip_buf+28
 613  f3f8 cdf2b9        	call	L331_uip_arp_update
 615  f3fb 85            	popw	x
 616                     ; 288       BUF->opcode = HTONS(2);
 618  f3fc ae0002        	ldw	x,#2
 619  f3ff cf038b        	ldw	_uip_buf+20,x
 620                     ; 290       memcpy(BUF->dhwaddr.addr, BUF->shwaddr.addr, 6);
 622  f402 ae0006        	ldw	x,#6
 623  f405               L63:
 624  f405 d6038c        	ld	a,(_uip_buf+21,x)
 625  f408 d70396        	ld	(_uip_buf+31,x),a
 626  f40b 5a            	decw	x
 627  f40c 26f7          	jrne	L63
 628                     ; 291       memcpy(BUF->shwaddr.addr, uip_ethaddr.addr, 6);
 630  f40e ae0006        	ldw	x,#6
 631  f411               L04:
 632  f411 d60009        	ld	a,(_uip_ethaddr-1,x)
 633  f414 d7038c        	ld	(_uip_buf+21,x),a
 634  f417 5a            	decw	x
 635  f418 26f7          	jrne	L04
 636                     ; 292       memcpy(BUF->ethhdr.src.addr, uip_ethaddr.addr, 6);
 638  f41a ae0006        	ldw	x,#6
 639  f41d               L24:
 640  f41d d60009        	ld	a,(_uip_ethaddr-1,x)
 641  f420 d7037c        	ld	(_uip_buf+5,x),a
 642  f423 5a            	decw	x
 643  f424 26f7          	jrne	L24
 644                     ; 293       memcpy(BUF->ethhdr.dest.addr, BUF->dhwaddr.addr, 6);
 646  f426 ae0006        	ldw	x,#6
 647  f429               L44:
 648  f429 d60396        	ld	a,(_uip_buf+31,x)
 649  f42c d70376        	ld	(_uip_buf-1,x),a
 650  f42f 5a            	decw	x
 651  f430 26f7          	jrne	L44
 652                     ; 295       BUF->dipaddr[0] = BUF->sipaddr[0];
 654  f432 ce0393        	ldw	x,_uip_buf+28
 655  f435 cf039d        	ldw	_uip_buf+38,x
 656                     ; 296       BUF->dipaddr[1] = BUF->sipaddr[1];
 658  f438 ce0395        	ldw	x,_uip_buf+30
 659  f43b cf039f        	ldw	_uip_buf+40,x
 660                     ; 297       BUF->sipaddr[0] = uip_hostaddr[0];
 662  f43e ce02c4        	ldw	x,_uip_hostaddr
 663  f441 cf0393        	ldw	_uip_buf+28,x
 664                     ; 298       BUF->sipaddr[1] = uip_hostaddr[1];
 666  f444 ce02c6        	ldw	x,_uip_hostaddr+2
 667  f447 cf0395        	ldw	_uip_buf+30,x
 668                     ; 300       BUF->ethhdr.type = HTONS(UIP_ETHTYPE_ARP);
 670  f44a ae0806        	ldw	x,#2054
 671  f44d cf0383        	ldw	_uip_buf+12,x
 672                     ; 301       uip_len = sizeof(struct arp_hdr);
 674  f450 ae002a        	ldw	x,#42
 675  f453 cf0373        	ldw	_uip_len,x
 677  f456 81            	ret	
 678  f457               L522:
 679                     ; 304   case HTONS(ARP_REPLY):
 679                     ; 305     /* ARP reply. We insert or update the ARP table if it was meant
 679                     ; 306        for us. */
 679                     ; 307     if(uip_ipaddr_cmp(BUF->dipaddr, uip_hostaddr)) {
 681  f457 ce039d        	ldw	x,_uip_buf+38
 682  f45a c302c4        	cpw	x,_uip_hostaddr
 683  f45d 2613          	jrne	L342
 685  f45f ce039f        	ldw	x,_uip_buf+40
 686  f462 c302c6        	cpw	x,_uip_hostaddr+2
 687  f465 260b          	jrne	L342
 688                     ; 308       uip_arp_update(BUF->sipaddr, &BUF->shwaddr);
 690  f467 ae038d        	ldw	x,#_uip_buf+22
 691  f46a 89            	pushw	x
 692  f46b ae0393        	ldw	x,#_uip_buf+28
 693  f46e cdf2b9        	call	L331_uip_arp_update
 695  f471 85            	popw	x
 696  f472               L342:
 697                     ; 313   return;
 700  f472 81            	ret	
 751                     ; 342 uip_arp_out(void)
 751                     ; 343 {
 752                     .text:	section	.text,new
 753  f473               _uip_arp_out:
 755       00000002      OFST:	set	2
 758                     ; 354   if(uip_ipaddr_cmp(IPBUF->destipaddr, broadcast_ipaddr)) {
 760  f473 ce0395        	ldw	x,_uip_buf+30
 761  f476 c39f17        	cpw	x,L31_broadcast_ipaddr
 762  f479 2617          	jrne	L172
 764  f47b ce0397        	ldw	x,_uip_buf+32
 765  f47e c39f19        	cpw	x,L31_broadcast_ipaddr+2
 766  f481 260f          	jrne	L172
 767                     ; 355     memcpy(IPBUF->ethhdr.dest.addr, broadcast_ethaddr.addr, 6);
 769  f483 ae0006        	ldw	x,#6
 770  f486               L25:
 771  f486 d69f10        	ld	a,(L11_broadcast_ethaddr-1,x)
 772  f489 d70376        	ld	(_uip_buf-1,x),a
 773  f48c 5a            	decw	x
 774  f48d 26f7          	jrne	L25
 776  f48f ccf5a2        	jra	L372
 777  f492               L172:
 778                     ; 359     if(!uip_ipaddr_maskcmp(IPBUF->destipaddr, uip_hostaddr, uip_netmask)) {
 780  f492 ce0395        	ldw	x,_uip_buf+30
 781  f495 01            	rrwa	x,a
 782  f496 c402c1        	and	a,_uip_netmask+1
 783  f499 01            	rrwa	x,a
 784  f49a c402c0        	and	a,_uip_netmask
 785  f49d 01            	rrwa	x,a
 786  f49e 90ce02c4      	ldw	y,_uip_hostaddr
 787  f4a2 9001          	rrwa	y,a
 788  f4a4 c402c1        	and	a,_uip_netmask+1
 789  f4a7 9001          	rrwa	y,a
 790  f4a9 c402c0        	and	a,_uip_netmask
 791  f4ac 9001          	rrwa	y,a
 792  f4ae 90bf07        	ldw	c_y,y
 793  f4b1 b307          	cpw	x,c_y
 794  f4b3 2623          	jrne	L103
 796  f4b5 ce0397        	ldw	x,_uip_buf+32
 797  f4b8 01            	rrwa	x,a
 798  f4b9 c402c3        	and	a,_uip_netmask+3
 799  f4bc 01            	rrwa	x,a
 800  f4bd c402c2        	and	a,_uip_netmask+2
 801  f4c0 01            	rrwa	x,a
 802  f4c1 90ce02c6      	ldw	y,_uip_hostaddr+2
 803  f4c5 9001          	rrwa	y,a
 804  f4c7 c402c3        	and	a,_uip_netmask+3
 805  f4ca 9001          	rrwa	y,a
 806  f4cc c402c2        	and	a,_uip_netmask+2
 807  f4cf 9001          	rrwa	y,a
 808  f4d1 90bf07        	ldw	c_y,y
 809  f4d4 b307          	cpw	x,c_y
 810  f4d6 2731          	jreq	L703
 811  f4d8               L103:
 812                     ; 363       uip_ipaddr_copy(ipaddr, uip_draddr);
 814  f4d8 ce02bc        	ldw	x,_uip_draddr
 815  f4db cf0571        	ldw	L71_ipaddr,x
 818  f4de ce02be        	ldw	x,_uip_draddr+2
 820  f4e1               L503:
 821  f4e1 cf0573        	ldw	L71_ipaddr+2,x
 822                     ; 370     for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
 824  f4e4 4f            	clr	a
 825  f4e5 c70570        	ld	L12_i,a
 826  f4e8               L313:
 827                     ; 372       tabptr = &arp_table[i];
 829  f4e8 97            	ld	xl,a
 830  f4e9 a60b          	ld	a,#11
 831  f4eb 42            	mul	x,a
 832  f4ec 1c0575        	addw	x,#L51_arp_table
 834                     ; 373       if(uip_ipaddr_cmp(ipaddr, tabptr->ipaddr)) {
 836  f4ef 9093          	ldw	y,x
 837  f4f1 90fe          	ldw	y,(y)
 838  f4f3 90c30571      	cpw	y,L71_ipaddr
 839  f4f7 261b          	jrne	L123
 841  f4f9 9093          	ldw	y,x
 842  f4fb 90ee02        	ldw	y,(2,y)
 843  f4fe 90c30573      	cpw	y,L71_ipaddr+2
 844  f502 2610          	jrne	L123
 845                     ; 375 	break;
 847  f504 c60570        	ld	a,L12_i
 848  f507 2016          	jra	L713
 849  f509               L703:
 850                     ; 367       uip_ipaddr_copy(ipaddr, IPBUF->destipaddr);
 852  f509 ce0395        	ldw	x,_uip_buf+30
 853  f50c cf0571        	ldw	L71_ipaddr,x
 856  f50f ce0397        	ldw	x,_uip_buf+32
 857  f512 20cd          	jra	L503
 858  f514               L123:
 859                     ; 370     for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
 861  f514 725c0570      	inc	L12_i
 864  f518 c60570        	ld	a,L12_i
 865  f51b a104          	cp	a,#4
 866  f51d 25c9          	jrult	L313
 867  f51f               L713:
 868                     ; 379     if(i == UIP_ARPTAB_SIZE) {
 870  f51f a104          	cp	a,#4
 871  f521 266d          	jrne	L323
 872                     ; 383       memset(BUF->ethhdr.dest.addr, 0xff, 6);
 874  f523 a6ff          	ld	a,#255
 875  f525 ae0006        	ldw	x,#6
 876  f528               L45:
 877  f528 d70376        	ld	(_uip_buf-1,x),a
 878  f52b 5a            	decw	x
 879  f52c 26fa          	jrne	L45
 880                     ; 384       memset(BUF->dhwaddr.addr, 0x00, 6);
 882  f52e ae0006        	ldw	x,#6
 883  f531               L65:
 884  f531 724f0396      	clr	(_uip_buf+31,x)
 885  f535 5a            	decw	x
 886  f536 26f9          	jrne	L65
 887                     ; 385       memcpy(BUF->ethhdr.src.addr, uip_ethaddr.addr, 6);
 889  f538 ae0006        	ldw	x,#6
 890  f53b               L06:
 891  f53b d60009        	ld	a,(_uip_ethaddr-1,x)
 892  f53e d7037c        	ld	(_uip_buf+5,x),a
 893  f541 5a            	decw	x
 894  f542 26f7          	jrne	L06
 895                     ; 386       memcpy(BUF->shwaddr.addr, uip_ethaddr.addr, 6);
 897  f544 ae0006        	ldw	x,#6
 898  f547               L26:
 899  f547 d60009        	ld	a,(_uip_ethaddr-1,x)
 900  f54a d7038c        	ld	(_uip_buf+21,x),a
 901  f54d 5a            	decw	x
 902  f54e 26f7          	jrne	L26
 903                     ; 388       uip_ipaddr_copy(BUF->dipaddr, ipaddr);
 905  f550 ce0571        	ldw	x,L71_ipaddr
 906  f553 cf039d        	ldw	_uip_buf+38,x
 909  f556 ce0573        	ldw	x,L71_ipaddr+2
 910  f559 cf039f        	ldw	_uip_buf+40,x
 911                     ; 389       uip_ipaddr_copy(BUF->sipaddr, uip_hostaddr);
 913  f55c ce02c4        	ldw	x,_uip_hostaddr
 914  f55f cf0393        	ldw	_uip_buf+28,x
 917  f562 ce02c6        	ldw	x,_uip_hostaddr+2
 918  f565 cf0395        	ldw	_uip_buf+30,x
 919                     ; 390       BUF->opcode = HTONS(ARP_REQUEST); /* ARP request. */
 921  f568 ae0001        	ldw	x,#1
 922  f56b cf038b        	ldw	_uip_buf+20,x
 923                     ; 391       BUF->hwtype = HTONS(ARP_HWTYPE_ETH);
 925  f56e cf0385        	ldw	_uip_buf+14,x
 926                     ; 392       BUF->protocol = HTONS(UIP_ETHTYPE_IP);
 928  f571 ae0800        	ldw	x,#2048
 929  f574 cf0387        	ldw	_uip_buf+16,x
 930                     ; 393       BUF->hwlen = 6;
 932  f577 35060389      	mov	_uip_buf+18,#6
 933                     ; 394       BUF->protolen = 4;
 935  f57b 3504038a      	mov	_uip_buf+19,#4
 936                     ; 395       BUF->ethhdr.type = HTONS(UIP_ETHTYPE_ARP);
 938  f57f ae0806        	ldw	x,#2054
 939  f582 cf0383        	ldw	_uip_buf+12,x
 940                     ; 397       uip_appdata = &uip_buf[UIP_TCPIP_HLEN + UIP_LLH_LEN];
 942  f585 ae03ad        	ldw	x,#_uip_buf+54
 943  f588 cf0375        	ldw	_uip_appdata,x
 944                     ; 399       uip_len = sizeof(struct arp_hdr);
 946  f58b ae002a        	ldw	x,#42
 947                     ; 400       return;
 949  f58e 202a          	jra	L07
 950  f590               L323:
 951                     ; 404     memcpy(IPBUF->ethhdr.dest.addr, tabptr->ethaddr.addr, 6);
 953  f590 1c0004        	addw	x,#4
 954  f593 bf04          	ldw	c_x,x
 955  f595 ae0006        	ldw	x,#6
 956  f598               L46:
 957  f598 5a            	decw	x
 958  f599 92d604        	ld	a,([c_x.w],x)
 959  f59c d70377        	ld	(_uip_buf,x),a
 960  f59f 5d            	tnzw	x
 961  f5a0 26f6          	jrne	L46
 962  f5a2               L372:
 963                     ; 406   memcpy(IPBUF->ethhdr.src.addr, uip_ethaddr.addr, 6);
 965  f5a2 ae0006        	ldw	x,#6
 966  f5a5               L66:
 967  f5a5 d60009        	ld	a,(_uip_ethaddr-1,x)
 968  f5a8 d7037c        	ld	(_uip_buf+5,x),a
 969  f5ab 5a            	decw	x
 970  f5ac 26f7          	jrne	L66
 971                     ; 408   IPBUF->ethhdr.type = HTONS(UIP_ETHTYPE_IP);
 973  f5ae ae0800        	ldw	x,#2048
 974  f5b1 cf0383        	ldw	_uip_buf+12,x
 975                     ; 410   uip_len += sizeof(struct uip_eth_hdr);
 977  f5b4 ce0373        	ldw	x,_uip_len
 978  f5b7 1c000e        	addw	x,#14
 979                     ; 411 }
 980  f5ba               L07:
 981  f5ba cf0373        	ldw	_uip_len,x
 984  f5bd 81            	ret	
1029                     ; 475 int check_mqtt_server_arp_entry(void)
1029                     ; 476 {
1030                     .text:	section	.text,new
1031  f5be               _check_mqtt_server_arp_entry:
1033       00000002      OFST:	set	2
1036                     ; 481   if(!uip_ipaddr_maskcmp(uip_mqttserveraddr, uip_hostaddr, uip_netmask)) {
1038  f5be ce02b8        	ldw	x,_uip_mqttserveraddr
1039  f5c1 01            	rrwa	x,a
1040  f5c2 c402c1        	and	a,_uip_netmask+1
1041  f5c5 01            	rrwa	x,a
1042  f5c6 c402c0        	and	a,_uip_netmask
1043  f5c9 01            	rrwa	x,a
1044  f5ca 90ce02c4      	ldw	y,_uip_hostaddr
1045  f5ce 9001          	rrwa	y,a
1046  f5d0 c402c1        	and	a,_uip_netmask+1
1047  f5d3 9001          	rrwa	y,a
1048  f5d5 c402c0        	and	a,_uip_netmask
1049  f5d8 9001          	rrwa	y,a
1050  f5da 90bf07        	ldw	c_y,y
1051  f5dd b307          	cpw	x,c_y
1052  f5df 2623          	jrne	L163
1054  f5e1 ce02ba        	ldw	x,_uip_mqttserveraddr+2
1055  f5e4 01            	rrwa	x,a
1056  f5e5 c402c3        	and	a,_uip_netmask+3
1057  f5e8 01            	rrwa	x,a
1058  f5e9 c402c2        	and	a,_uip_netmask+2
1059  f5ec 01            	rrwa	x,a
1060  f5ed 90ce02c6      	ldw	y,_uip_hostaddr+2
1061  f5f1 9001          	rrwa	y,a
1062  f5f3 c402c3        	and	a,_uip_netmask+3
1063  f5f6 9001          	rrwa	y,a
1064  f5f8 c402c2        	and	a,_uip_netmask+2
1065  f5fb 9001          	rrwa	y,a
1066  f5fd 90bf07        	ldw	c_y,y
1067  f600 b307          	cpw	x,c_y
1068  f602 2730          	jreq	L763
1069  f604               L163:
1070                     ; 485     uip_ipaddr_copy(ipaddr, uip_draddr);
1072  f604 ce02bc        	ldw	x,_uip_draddr
1073  f607 cf0571        	ldw	L71_ipaddr,x
1076  f60a ce02be        	ldw	x,_uip_draddr+2
1078  f60d               L563:
1079  f60d cf0573        	ldw	L71_ipaddr+2,x
1080                     ; 492   for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
1082  f610 4f            	clr	a
1083  f611 c70570        	ld	L12_i,a
1084  f614               L373:
1085                     ; 494     tabptr = &arp_table[i];
1087  f614 97            	ld	xl,a
1088  f615 a60b          	ld	a,#11
1089  f617 42            	mul	x,a
1090  f618 1c0575        	addw	x,#L51_arp_table
1092                     ; 495     if(uip_ipaddr_cmp(ipaddr, tabptr->ipaddr)) {
1094  f61b 9093          	ldw	y,x
1095  f61d 90fe          	ldw	y,(y)
1096  f61f 90c30571      	cpw	y,L71_ipaddr
1097  f623 261a          	jrne	L104
1099  f625 9093          	ldw	y,x
1100  f627 90ee02        	ldw	y,(2,y)
1101  f62a 90c30573      	cpw	y,L71_ipaddr+2
1102  f62e 260f          	jrne	L104
1103                     ; 497       return (uint8_t)1;
1105  f630 ae0001        	ldw	x,#1
1108  f633 81            	ret	
1109  f634               L763:
1110                     ; 489     uip_ipaddr_copy(ipaddr, uip_mqttserveraddr);
1112  f634 ce02b8        	ldw	x,_uip_mqttserveraddr
1113  f637 cf0571        	ldw	L71_ipaddr,x
1116  f63a ce02ba        	ldw	x,_uip_mqttserveraddr+2
1117  f63d 20ce          	jra	L563
1118  f63f               L104:
1119                     ; 492   for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
1122  f63f 725c0570      	inc	L12_i
1125  f643 c60570        	ld	a,L12_i
1126  f646 a104          	cp	a,#4
1127  f648 25ca          	jrult	L373
1128                     ; 501   return (uint8_t)0;
1130  f64a 5f            	clrw	x
1133  f64b 81            	ret	
1218                     	switch	.bss
1219  056d               L72_tmpage:
1220  056d 00            	ds.b	1
1221  056e               L52_arptime:
1222  056e 00            	ds.b	1
1223  056f               L32_c:
1224  056f 00            	ds.b	1
1225  0570               L12_i:
1226  0570 00            	ds.b	1
1227  0571               L71_ipaddr:
1228  0571 00000000      	ds.b	4
1229  0575               L51_arp_table:
1230  0575 000000000000  	ds.b	44
1231                     	xdef	_check_mqtt_server_arp_entry
1232                     	xdef	_uip_arp_timer
1233                     	xdef	_uip_arp_out
1234                     	xdef	_uip_arp_arpin
1235                     	xdef	_uip_arp_init
1236                     	xref	_uip_ethaddr
1237                     	xref	_uip_mqttserveraddr
1238                     	xref	_uip_draddr
1239                     	xref	_uip_netmask
1240                     	xref	_uip_hostaddr
1241                     	xref	_uip_len
1242                     	xref	_uip_appdata
1243                     	xref	_uip_buf
1244                     	xref.b	c_x
1245                     	xref.b	c_y
1265                     	end
